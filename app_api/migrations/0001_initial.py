# Generated by Django 5.0.6 on 2024-08-24 06:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('candidateid', models.CharField(max_length=100, null=True)),
                ('firstname', models.CharField(max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100, null=True)),
                ('registrationdate', models.DateTimeField(null=True)),
                ('companyid', models.IntegerField(null=True)),
                ('paperid', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('mobile', models.CharField(max_length=40, null=True)),
                ('add1', models.CharField(max_length=100, null=True)),
                ('add2', models.CharField(max_length=100, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('state', models.CharField(max_length=100, null=True)),
                ('country', models.CharField(max_length=40, null=True)),
                ('dob', models.DateField(null=True)),
                ('jobid', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=1, null=True)),
            ],
            options={
                'db_table': 'candidate',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('company_add1', models.CharField(blank=True, max_length=100, null=True)),
                ('company_add2', models.CharField(blank=True, max_length=100, null=True)),
                ('company_city', models.CharField(blank=True, max_length=100, null=True)),
                ('company_state', models.CharField(blank=True, max_length=100, null=True)),
                ('company_country', models.CharField(blank=True, max_length=100, null=True)),
                ('company_domain', models.CharField(blank=True, max_length=4, null=True)),
                ('company_status', models.CharField(blank=True, max_length=1, null=True)),
                ('company_organization', models.IntegerField(null=True)),
                ('company_website', models.CharField(blank=True, max_length=100, null=True)),
                ('company_phone1', models.CharField(blank=True, max_length=100, null=True)),
                ('company_phone2', models.CharField(blank=True, max_length=100, null=True)),
                ('company_email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, max_length=120, null=True)),
                ('companyemail', models.CharField(blank=True, max_length=120, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('contactperson', models.CharField(blank=True, max_length=50, null=True)),
                ('companytype', models.CharField(blank=True, max_length=100, null=True)),
                ('registerationtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'companydata',
            },
        ),
        migrations.CreateModel(
            name='JobDesc',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('expmin', models.IntegerField(null=True)),
                ('expmax', models.IntegerField(null=True)),
                ('role', models.CharField(max_length=100, null=True)),
                ('department', models.CharField(max_length=100, null=True)),
                ('location', models.CharField(max_length=512, null=True)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=13, null=True)),
                ('skillset', models.CharField(max_length=512, null=True)),
                ('skillnotes', models.CharField(max_length=512, null=True)),
                ('interviewers', models.CharField(max_length=51, null=True)),
                ('expjoindate', models.DateField(max_length=11, null=True)),
                ('positions', models.IntegerField(null=True)),
                ('createdby', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=1, null=True)),
            ],
            options={
                'db_table': 'jobdesc',
            },
        ),
        migrations.CreateModel(
            name='ReferenceId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=1, null=True)),
                ('prefix1', models.CharField(max_length=3, null=True)),
                ('prefix2', models.CharField(max_length=3, null=True)),
                ('prefix3', models.CharField(max_length=3, null=True)),
                ('lastid', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'referenceid',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('candidateid', models.IntegerField(null=True)),
                ('jobid', models.IntegerField(null=True)),
                ('paperid', models.IntegerField(null=True)),
                ('papertype', models.CharField(blank=True, max_length=1, null=True)),
                ('companyid', models.IntegerField(null=True)),
                ('registrationdate', models.DateTimeField(null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'registration',
            },
        ),
        migrations.CreateModel(
            name='User_data',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('usr_email', models.CharField(max_length=120)),
                ('usr_password', models.CharField(max_length=60)),
                ('user', models.CharField(max_length=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_data',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
